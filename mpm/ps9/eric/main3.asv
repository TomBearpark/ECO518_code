%% Preliminaries
clear
clc
addpath('functions/')

figPath = 'figures/';

% 
nBoot = 100;
alpha = .05;

%%

Raw       = readtable('nls.csv');
df        = Raw;
df.exper2 = df.exper.^2;
df.C      = df.educ*0+1; 
n         = height(df);


qGrid = .05:.01:.95;
nq    = length(qGrid);

covariates = {'Constant', 'educ', 'exper', 'exper2'};
k          = length(covariates);
Beta       = nan(k, nq);          % Full sample
BetaBoot   = nan(k, nq, nBoot);   % Bootstrap


X = df{:, covariates};
y = df.luwe;


for jBoot = 1:nBoot
    clc
    disp(['Running ' num2str(jBoot) ' of ' num2str(nBoot) ' bootstrap draws...'])

    for jq = 1:nq

        
        if jBoot == 1
        Beta(:, jq) = rq(X,y,qGrid(jq));
        end

        % Make bootstrap dataset
        keep = randsample(n, n, true);
        X_j  = X(keep, :);
        y_j = y(keep);

        % Run quantile regression
        BetaBoot(:, jq, jBoot) = rq(X_j, y_j, qGrid(jq));

    end
end


%%

zStar         = -norminv(alpha/2);
BetaBootSE    = std(BetaBoot, 0, 3);
BetaCI        = nan(size(Beta, 1), size(Beta,2),3);
BetaCI(:,:,1) = Beta - BetaBootSE .* zStar;
BetaCI(:,:,2) = Beta;
BetaCI(:,:,3) = Beta + BetaBootSE .* zStar;



for jVar = 1:k
    figure
    quantilePlot(qGrid, squeeze(BetaCI(jVar, :, :)))
    resizeFig()
    xlabel('quantile')
    box on
    grid on
    title(covariates{jVar})
end


